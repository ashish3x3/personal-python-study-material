
import math
def make_ring(ring, i, j):
	if i not in ring:
		ring[i] = {}
	ring[i][j] = 1

	if j not in ring:
		ring[j] = {}
	ring[j][i] = 1
	return ring

ring = {}
n = 256
grid_side = int(math.sqrt(n))

for i in range(grid_side):
	for j in range(grid_side):
		if i < grid_side-1:
			make_ring(ring, (i,j), (i+1,j))
		if j < grid_side-1:
			make_ring(ring, (i,j), (i,j+1))

# print number of edges
print(sum(len(ring[node]) for node in ring.keys())//2)  # 480
# print(ring)

'''
{(7, 3): {(6, 3): 1, (7, 4): 1, (8, 3): 1, (7, 2): 1}, (6, 9): {(5, 9): 1, (6, 10): 1, (6, 8): 1, (7, 9): 1}, (12, 1): {(13, 1): 1, (12, 2): 1, (11, 1): 1, (12, 0): 1}, (11, 11): {(11, 12): 1, (11, 10): 1, (10, 11): 1, (12, 11): 1}, (7, 12): {(6, 12): 1, (8, 12): 1, (7, 13): 1, (7, 11): 1}, (14, 4): {(14, 3): 1, (15, 4): 1, (13, 4): 1, (14, 5): 1}, (13, 4): {(14, 4): 1, (12, 4): 1, (13, 5): 1, (13, 3): 1}, (12, 12): {(12, 13): 1, (13, 12): 1, (11, 12): 1, (12, 11): 1}, (0, 7): {(0, 6): 1, (0, 8): 1, (1, 7): 1}, (15, 1): {(14, 1): 1, (15, 0): 1, (15, 2): 1}, (1, 6): {(0, 6): 1, (1, 7): 1, (2, 6): 1, (1, 5): 1}, (0, 10): {(0, 9): 1, (1, 10): 1, (0, 11): 1}, (3, 7): {(2, 7): 1, (3, 8): 1, (4, 7): 1, (3, 6): 1}, (2, 5): {(1, 5): 1, (2, 6): 1, (2, 4): 1, (3, 5): 1}, (1, 11): {(1, 10): 1, (0, 11): 1, (2, 11): 1, (1, 12): 1}, (8, 5): {(8, 6): 1, (9, 5): 1, (7, 5): 1, (8, 4): 1}, (5, 8): {(5, 9): 1, (5, 7): 1, (6, 8): 1, (4, 8): 1}, (4, 0): {(3, 0): 1, (4, 1): 1, (5, 0): 1}, ...


'''